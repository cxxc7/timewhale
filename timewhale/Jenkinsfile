pipeline {
  agent any

  environment {
    SONARQUBE = 'SonarQube-server'
  }

  tools {
    nodejs 'node18'
  }

  stages {
    stage('Clone Repo') {
      steps {
        git 'https://github.com/cxxc7/timewhale.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        sh 'npm install'
      }
    }

    stage('SonarQube Scan') {
      steps {
        withSonarQubeEnv('SonarQube-server') {
          sh 'sonar-scanner'
        }
      }
    }

    stage('OWASP Check') {
      steps {
        dependencyCheck additionalArguments: '--project timewhale --scan .', outdir: 'dependency-check-report'
      }
    }

    stage('Docker Build') {
      steps {
        script {
          docker.build("cxxc7/timewhale:latest")
        }
      }
    }

    stage('Docker Push') {
      steps {
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
            docker.image("cxxc7/timewhale:latest").push()
          }
        }
      }
    }

    stage('Docker Run') {
      steps {
        sh 'docker run -d -p 3000:3000 cxxc7/timewhale:latest'
      }
    }
  }
}
